[package]
name = "oxirs-embed"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "Knowledge graph embeddings with TransE, ComplEx, and custom models"
keywords = ["embeddings", "knowledge-graph", "machine-learning", "ai", "rdf"]
categories = ["science", "algorithms", "data-structures"]
rust-version.workspace = true

[dependencies]
# Core dependencies - using workspace versions for consistency
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
# ndarray and rand now provided by scirs2-core
rayon = "1.10"
nalgebra = "0.33"
uuid = { workspace = true }
tokio = { workspace = true }
async-trait = { workspace = true }
chrono = { workspace = true }
rand_distr = "0.5"
num_cpus = { workspace = true }
tempfile = { workspace = true }
# GraphQL and streaming dependencies - downgraded to avoid arrow conflicts
async-graphql = "7.0"
tokio-stream = { workspace = true }
futures-util = { workspace = true }
regex = "1.11"

# Federated learning dependencies
bincode = "1.3"
flate2 = "1.1"

# Internal OxiRS dependencies
oxirs-vec.workspace = true

# SciRS2 AI/ML dependencies for enhanced embeddings with full feature support
scirs2-core = { workspace = true, features = ["all"] }
scirs2-autograd = { workspace = true }  # For array! macro support
scirs2-neural = { workspace = true }
scirs2-stats = { workspace = true }
scirs2-metrics = { workspace = true }
scirs2-linalg = { workspace = true }

# Web server dependencies (for API server feature)
axum = { version = "0.7", optional = true }
tower = { version = "0.5", optional = true }
tower-http = { version = "0.6", features = ["cors", "timeout", "trace"], optional = true }

[dev-dependencies]
criterion = { workspace = true }
tempfile = { workspace = true }
tracing-subscriber = { workspace = true }

[features]
default = ["basic-models"]
basic-models = ["transe", "complex", "distmult", "hole"]
advanced-models = ["rotate", "conve", "tucker", "quatd"]
neural-models = []
transe = []
complex = []
distmult = []
hole = []
rotate = []
conve = ["neural-models"]
tucker = []
quatd = []
custom-models = []
ontology-aware = []
multi-modal = []
gpu-acceleration = ["gpu", "cuda"]
api-server = ["dep:axum", "dep:tower", "dep:tower-http"]

# High-performance acceleration features
gpu = ["scirs2-linalg/gpu", "scirs2-neural/gpu"]
cuda = ["scirs2-linalg/cuda"]
opencl = ["scirs2-linalg/opencl"]
rocm = ["scirs2-linalg/rocm"]
metal = ["scirs2-linalg/metal"]
simd = ["scirs2-linalg/simd"]
parallel = ["scirs2-linalg/parallel"]
