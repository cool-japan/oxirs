[package]
name = "oxirs-federate"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "SERVICE planner and GraphQL stitching for federated SPARQL queries"
keywords = ["federation", "distributed-query", "sparql", "graphql", "rdf"]
categories = ["network-programming", "database", "algorithms"]
rust-version.workspace = true

[dependencies]
oxirs-core = { workspace = true, features = ["serde"] }
oxirs-gql.workspace = true
oxirs-vec.workspace = true

# SciRS2 dependencies for federated processing
scirs2-optimize = { workspace = true }
scirs2-stats = { workspace = true }
scirs2-core = { workspace = true }
tokio.workspace = true
hyper.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
anyhow.workspace = true
thiserror.workspace = true
tracing.workspace = true
reqwest = { version = "0.12", features = ["json", "stream", "gzip", "brotli"] }
async-trait.workspace = true
futures.workspace = true
dashmap = "6.1"
parking_lot = "0.12"
chrono = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["v4", "serde"] }
url.workspace = true
backoff = { version = "0.4", features = ["tokio"] }
governor = "0.10"
tower = { workspace = true, features = ["limit", "load-shed", "buffer", "timeout"] }
tower-http = { workspace = true, features = ["cors", "trace", "timeout", "compression-gzip"] }
http = "1.3"
bytes = "1.10"
base64 = "0.22"
jsonwebtoken = "9.2"
rustls = { version = "0.23", features = ["std"] }
rustls-webpki = "0.102"
opentelemetry = { workspace = true, features = ["trace", "metrics"], optional = true }
opentelemetry-jaeger = { workspace = true, features = ["collector_client", "rt-tokio"], optional = true }
opentelemetry-otlp = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, features = ["trace", "rt-tokio"], optional = true }
prometheus = { version = "0.13", optional = true }
async-stream = "0.3"
pin-project = "1.1"
# oxigraph = "0.4.11"  # REMOVED: Using oxirs-core instead
nalgebra = { version = "0.33", features = ["serde"] }
async-graphql = { version = "7.0", optional = true }
async-graphql-parser = { version = "7.0", optional = true }
mdns-sd = { version = "0.15", optional = true }
kube = { version = "0.88", features = ["client", "config"], optional = true }
k8s-openapi = { version = "0.26", features = ["v1_30"], optional = true }
oauth2 = { version = "5.0", optional = true }
redis = { version = "0.27", features = ["aio", "tokio-comp"], optional = true }
lru = { version = "0.16", optional = true }
moka = { version = "0.12", features = ["future"], optional = true }
bloom = { version = "0.3", optional = true }
petgraph = "0.8"
regex = "1.11"
md5 = "0.8"
flate2 = "1.1"
brotli = "8.0"
lz4_flex = "0.11"
zstd = "0.13"
rmp-serde = "1.3"
serde_cbor = "0.11"
tokio-stream = { version = "0.1", features = ["sync"] }
futures-util = "0.3"
# rand, rand_distr, and ndarray now provided by scirs2-core

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tokio-test = "0.4"
mockito = "1.7"
wiremock = "0.6"
proptest = "1.7"
serial_test = "3.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
default = ["caching", "monitoring", "redis-cache"]
graphql-stitching = ["async-graphql", "async-graphql-parser"]
kubernetes = ["kube", "k8s-openapi"]
redis-cache = ["redis"]
caching = ["lru", "moka", "bloom"]
monitoring = ["opentelemetry", "opentelemetry-jaeger", "opentelemetry-otlp", "opentelemetry_sdk", "prometheus"]
service-discovery = ["mdns-sd"]
oauth = ["oauth2"]

