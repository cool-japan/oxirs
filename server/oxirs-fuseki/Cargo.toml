[package]
name = "oxirs-fuseki"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "SPARQL 1.1/1.2 HTTP protocol server with Fuseki-compatible configuration"
keywords.workspace = true
categories.workspace = true
rust-version.workspace = true

[dependencies]
# Core dependencies
oxirs-core = { path = "../../core/oxirs-core" }
oxirs-arq = { path = "../../engine/oxirs-arq" }

# HTTP server framework
tokio = { version = "1.42", features = ["full"] }
tokio-util = "0.7"
hyper = { version = "1.5", features = ["full"] }
axum = { version = "0.7", features = ["ws", "multipart"] }
axum-extra = { version = "0.9", features = ["typed-header"] }
tower = { version = "0.5", features = ["timeout", "load-shed", "buffer"] }
tower-http = { version = "0.6", features = ["cors", "trace", "timeout", "compression-gzip", "compression-br", "request-id", "sensitive-headers"] }

# CLI and configuration
clap = { version = "4.5", features = ["derive", "env"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
serde_urlencoded = "0.7"
toml = "0.8"
config = "0.14"
figment = { version = "0.10", features = ["toml", "yaml", "env"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Hashing
md5 = "0.7"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "chrono"] }
tracing-opentelemetry = { version = "0.28", optional = true }
opentelemetry = { version = "0.27", features = ["trace"] }
opentelemetry-otlp = "0.27"
opentelemetry_sdk = { version = "0.27", features = ["trace"] }

# Authentication and security
uuid = { version = "1.11", features = ["v4", "serde"] }
argon2 = "0.5"
jsonwebtoken = { version = "9.3", optional = true }
bcrypt = { version = "0.15", optional = true }
sha2 = "0.10"
base64 = "0.22"

# Time and dates
chrono = { version = "0.4", features = ["serde"] }

# HTTP utilities
headers = "0.4"
mime = "0.3"
http-body-util = "0.1"

# Metrics and monitoring
prometheus = { version = "0.13", optional = true }
axum-prometheus = { version = "0.7", optional = true }
metrics = "0.24"
metrics-exporter-prometheus = "0.16"

# Caching
lru = "0.12"
moka = { version = "0.12", features = ["future"] }

# Rate limiting and concurrent data structures
governor = "0.6"
dashmap = "6.1"
parking_lot = "0.12"

# Streaming
rdkafka = { version = "0.36", optional = true }
async-nats = { version = "0.37", optional = true }
bytes = "1.8"

# Validation
validator = { version = "0.18", features = ["derive"] }

# Random number generation
rand = "0.8"

# Regular expressions for query validation
regex = "1.11"

# Serialization and encoding
bincode = "1.3"
hex = "0.4"

# Additional dependencies for MFA and authentication
urlencoding = "2.1"
base32 = "0.5"
qrcode = "0.14"
hmac = "0.12"
sha1 = "0.10"
flate2 = "1.0"

# OAuth2 and HTTP client
reqwest = { version = "0.12", features = ["json"] }
percent-encoding = "2.3"
url = { version = "2.5", features = ["serde"] }

# SAML security (optional)
xmlsec = { version = "0.2", optional = true }

# LDAP authentication
ldap3 = { version = "0.11", optional = true }

# System utilities
libc = "0.2"

# Async utilities
futures = "0.3"
futures-util = "0.3"
tokio-stream = "0.1"
async-trait = "0.1"

# DNS resolution for service discovery
trust-dns-resolver = "0.23"

# X.509 certificate parsing for client authentication
x509-parser = "0.16"
der-parser = "9.0"
ring = "0.17"

# File watching for hot reload
notify = { version = "6.1", optional = true }

# Template engine for admin UI
askama = { version = "0.12", features = ["with-axum"], optional = true }

# Environment
dotenv = "0.15"

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
tokio-test = "0.4"
axum-test = "16.1"
http-body-util = "0.1"
tower = { version = "0.5", features = ["util"] }
tempfile = "3.13"
rstest = "0.23"
proptest = "1.5"
insta = "1.40"
serial_test = "3.1"
wiremock = "0.6"

[features]
default = ["metrics", "auth"]
metrics = ["prometheus", "axum-prometheus"]
auth = ["jsonwebtoken", "bcrypt"]
admin-ui = ["askama"]
tracing = ["tracing-opentelemetry"]
rate-limit = []
kafka = ["rdkafka"]
nats = ["async-nats"]
hot-reload = ["notify"]
ldap = ["ldap3"]
saml = ["xmlsec"]
development = ["admin-ui", "tracing"]
production = ["metrics", "auth", "rate-limit", "ldap"]

[[bin]]
name = "oxirs-fuseki"
path = "src/main.rs"

